#!/usr/bin/env ringo

var {system} = require('ringo/subprocess');
var fs = require('fs');

if (require.main === module) {
    system('coffee', '--output', fs.join('..', 'public', 'app'), '--lint',
            '--compile', fs.join('..', 'src', 'app'),
            {dir: module.directory});

    system('stylus', '--out', fs.join('..', 'build'), '--compress',
            fs.join('..', 'src', 'style', 'main.styl'),
            {dir: module.directory});

    system('fusion', '--config', fs.join('..', 'config', 'fusion.yaml'),
            fs.join('..', 'src', 'tmpl'), {dir: module.directory});

    system('ringo-modulr', '--output', fs.join('..', 'build', 'main.js'),
            fs.join('..', 'public', 'app', 'main.js'),
            {dir: module.directory});

    system('java', '-jar', 'compiler.jar', '--js',
            fs.join('..', 'public', 'lib', 'jquery-1.5.js'), '--js',
            fs.join('..', 'public', 'lib', 'underscore-1.1.4.js'), '--js',
            fs.join('..', 'public', 'lib', 'backbone-0.3.3.js'), '--js',
            fs.join('..', 'public', 'lib', 'backbone-localstorage.js'),
            '--js', fs.join('..', 'build', 'main.js'), '--js_output_file',
            fs.join('..', 'build', 'main.min.js'), {dir: module.directory});

    system('./bin/docco-create', {dir: module.resolve('..')});

    fs.remove(module.resolve(fs.join('..', 'build', 'main.js')));

    if (!fs.exists(module.resolve(fs.join('..', 'build', 'app')))) {
        fs.makeDirectory(module.resolve(fs.join('..', 'build', 'app')));
    }

    if (!fs.exists(module.resolve(fs.join('..', 'build', 'style')))) {
        fs.makeDirectory(module.resolve(fs.join('..', 'build', 'style')));
    }

    fs.move(module.resolve(fs.join('..', 'build', 'main.min.js')),
            module.resolve(fs.join('..', 'build', 'app', 'main.min.js')));

    fs.move(module.resolve(fs.join('..', 'build', 'main.css')),
            module.resolve(fs.join('..', 'build', 'style', 'main.min.css')));

    fs.copy(module.resolve(fs.join('..', 'public', 'index.html')),
            module.resolve(fs.join('..', 'build', 'index.html')));

    fs.copyTree(module.resolve(fs.join('..', 'public', 'docs')),
            module.resolve(fs.join('..', 'build', 'docs')));

    fs.copyTree(module.resolve(fs.join('..', 'public', 'img')),
            module.resolve(fs.join('..', 'build', 'img')));

    fs.write(module.resolve(fs.join('..', 'build', 'index.html')),
            fs.read(module.resolve(fs.join('..', 'build', 'index.html')))
            .replace(/<link.+\n\s*(<script.+\n\s*)+/,
            '<link href="style/main.min.css" media="all" rel="stylesheet" '
            + 'type="text/css" />\n    '
            + '<script src="app/main.min.js"></script>\n  '));
}
